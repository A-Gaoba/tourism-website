"use client"

import { useEffect, useState } from 'react'
import { useSelections } from '../components/SelectionsProvider'
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Toaster } from "@/components/ui/toaster"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"

export default function PackagePage() {
  const { selections, removeSelection, clearSelections } = useSelections()
  const [name, setName] = useState('')

  useEffect(() => {
    const savedPackage = localStorage.getItem('tourPackage')
    if (savedPackage) {
      const { name: savedName } = JSON.parse(savedPackage)
      if (savedName) {
        setName(savedName)
      }
    }
  }, [])

  useEffect(() => {
    const savedPackage = localStorage.getItem('tourPackage')
    if (savedPackage) {
      const parsedPackage = JSON.parse(savedPackage)
      localStorage.setItem('tourPackage', JSON.stringify({ ...parsedPackage, name }))
    }
  }, [name])

  const calculateTotal = () => {
    let total = 0
    selections.hotels.concat(selections.cottages).forEach(accommodation => {
      if (accommodation?.booking?.startDate && accommodation?.booking?.endDate && accommodation?.room?.price) {
        const nights = (new Date(accommodation.booking.endDate).getTime() - new Date(accommodation.booking.startDate).getTime()) / (1000 * 3600 * 24)
        total += accommodation.room.price * nights
      }
    })
    selections.activities.forEach(activity => {
      if (activity?.price && activity?.tickets) {
        total += activity.price * activity.tickets
      }
    })
    selections.transportation.forEach(transport => {
      if (transport?.price) {
        total += transport.price
      }
    })
    return total
  }

  const sendToWhatsApp = () => {
    if (!name) {
      alert('ุงูุฑุฌุงุก ุฅุฏุฎุงู ุงูุงุณู ูุจู ุฅุฑุณุงู ุงูุจุงูุฉ')
      return
    }

    const message = `๐ ุนุฑุถ ุจุงูุฉ ุงูุณูุฑ ุงููุงุฎุฑุฉ ูู ${name} ๐
โจ ุงูุฅูุงูุฉ ุงููุงุฎุฑุฉ:
${selections.hotels.concat(selections.cottages).map(accommodation => `
${accommodation.name} - ${accommodation.room.name}
ุงููุชุฑุฉ: ูู ${accommodation.booking?.startDate} ุฅูู ${accommodation.booking?.endDate}
ุนุฏุฏ ุงูุถููู: ${accommodation.booking?.adults} ุจุงูุบูู, ${accommodation.booking?.children.count} ุฃุทูุงู`).join('\n')}

๐ ุงููุนุงููุงุช ุงูุชุฑููููุฉ:
${selections.activities.map(activity => `${activity.name} - ${activity.tickets} ุชุฐุงูุฑ`).join('\n')}

๐ ุฎุฏูุงุช ุงูููู ูุงูุงุชุตุงู:
${selections.transportation.map(transport => transport.name).join('\n')}

๐ผ ุฅุฌูุงูู ุงูุชูููุฉ:
${calculateTotal()} ุฑูุจู (ูุง ูุนุงุฏู ${(calculateTotal() / 25.4).toFixed(2)} ุฑูุงู ุณุนูุฏู)

โจ ุงุญุฌุฒ ุงูุขู ูุงุณุชูุชุน ุจุฑุญูุชู ุงููุซุงููุฉ!`

    const encodedMessage = encodeURIComponent(message)
    window.open(`https://wa.me/?text=${encodedMessage}`, '_blank')
    
    // Clear local storage after sending
    localStorage.removeItem('tourPackage')
    clearSelections()
    setName('')
  }

  return (
    <div className="container mx-auto px-4 py-8">
      <h1 className="text-3xl font-bold mb-8">ุงูุจุงูุฉ ุงูููุงุฆูุฉ</h1>
      <div className="mb-4">
        <Label htmlFor="name">ุงูุงุณู</Label>
        <Input
          type="text"
          id="name"
          value={name}
          onChange={(e) => setName(e.target.value)}
          placeholder="ุฃุฏุฎู ุงุณูู"
          required
        />
      </div>
      <Card className="mb-8">
        <CardHeader>
          <CardTitle>ุงูุฅูุงูุฉ ุงููุงุฎุฑุฉ</CardTitle>
        </CardHeader>
        <CardContent>
          {selections.hotels.concat(selections.cottages).length === 0 ? (
            <p>ูู ูุชู ุงุฎุชูุงุฑ ุฃู ุฅูุงูุฉ.</p>
          ) : (
            selections.hotels.concat(selections.cottages).map((accommodation: any, index: number) => (
              <div key={`${accommodation.type}-${accommodation.id}-${index}`} className="mb-4 p-4 border rounded">
                <h3 className="font-bold">{accommodation.name}</h3>
                <p>{accommodation.room?.name}</p>
                {accommodation.booking && (
                  <>
                    <p>ูู {accommodation.booking.startDate} ุฅูู {accommodation.booking.endDate}</p>
                    <p>ุนุฏุฏ ุงูุถููู: {accommodation.booking.adults} ุจุงูุบูู, {accommodation.booking.children.count} ุฃุทูุงู</p>
                  </>
                )}
                <Button variant="destructive" onClick={() => removeSelection(accommodation.type === 'hotel' ? 'hotels' : 'cottages', accommodation.id)} className="mt-2">
                  ุฅุฒุงูุฉ
                </Button>
              </div>
            ))
          )}
        </CardContent>
      </Card>

      <Card className="mb-8">
        <CardHeader>
          <CardTitle>ุงููุนุงููุงุช ุงูุชุฑููููุฉ</CardTitle>
        </CardHeader>
        <CardContent>
          {selections.activities.length === 0 ? (
            <p>ูู ูุชู ุงุฎุชูุงุฑ ุฃู ุฃูุดุทุฉ.</p>
          ) : (
            selections.activities.map((activity, index) => (
              <div key={`activity-${activity.id}-${index}`} className="mb-4 p-4 border rounded">
                <h3 className="font-bold">{activity.name}</h3>
                <p>{activity.description}</p>
                <p>ุงูุชุงุฑูุฎ: {activity.date}</p>
                <p>ุนุฏุฏ ุงูุชุฐุงูุฑ: {activity.tickets}</p>
                <Button variant="destructive" onClick={() => removeSelection('activities', activity.id)} className="mt-2">
                  ุฅุฒุงูุฉ
                </Button>
              </div>
            ))
          )}
        </CardContent>
      </Card>

      <Card className="mb-8">
        <CardHeader>
          <CardTitle>ุฎุฏูุงุช ุงูููู ูุงูุงุชุตุงู</CardTitle>
        </CardHeader>
        <CardContent>
          {selections.transportation.length === 0 ? (
            <p>ูู ูุชู ุงุฎุชูุงุฑ ุฃู ุฎุฏูุงุช ููู.</p>
          ) : (
            selections.transportation.map((transport, index) => (
              <div key={`transport-${transport.id}-${index}`} className="mb-4 p-4 border rounded">
                <h3 className="font-bold">{transport.name}</h3>
                <p>{transport.description}</p>
                <Button variant="destructive" onClick={() => removeSelection('transportation', transport.id)} className="mt-2">
                  ุฅุฒุงูุฉ
                </Button>
              </div>
            ))
          )}
        </CardContent>
      </Card>

      <div className="mt-8">
        <h2 className="text-2xl font-bold mb-4">ุงูุฅุฌูุงูู: {calculateTotal()} ุฑูุจู (ูุง ูุนุงุฏู {(calculateTotal() / 25.4).toFixed(2)} ุฑูุงู ุณุนูุฏู)</h2>
        <Button onClick={sendToWhatsApp} className="ml-4">ุฅุฑุณุงู ุนุจุฑ ูุงุชุณุงุจ</Button>
        <Button variant="outline" onClick={clearSelections}>ูุณุญ ุงููู</Button>
      </div>
      <Toaster />
    </div>
  )
}

